{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielhauschildt/Desktop/Portfolio2Oct5/my-app/src/Components/Skyline.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { showLinks, showPort, showAccounts } from \"../actions/homeActions.js\";\n\nfunction Skyline(props) {\n  return React.createElement(\"div\", {\n    className: \"skyline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \" \", React.createElement(\"div\", {\n    className: \"cloudsBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: purpleClouds,\n    className: \"clouds\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: props.home.showPort ? \"fade-port-in\" : \"fade-port-out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"exit-button\",\n    onClick: () => {\n      props.showLinks();\n      props.showPort();\n      props.showAccounts();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"X\"), React.createElement(CarouselSpring, {\n    showNavigation: false,\n    nextProperty: nextProperty,\n    prevProperty: prevProperty,\n    name: property.name,\n    color: property.color,\n    appLink: property.app,\n    gitLink: property.github,\n    description: property.description,\n    note1: property.note1,\n    note2: property.note2,\n    note3: property.note3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), \")\", React.createElement(\"ul\", {\n    className: props.home.showLinks ? \"fade-links-in\" : \"fade-links-out\",\n    id: \"link-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"link coloredLink\",\n    onClick: () => {\n      setPortDisplay(portDisplay => !portDisplay);\n      setLinksDisplay(linksDisplay => !linksDisplay);\n      setAccountsDisplay(accountsDisplay => !accountsDisplay);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"PROJECTS\"), React.createElement(\"button\", {\n    className: \"link \",\n    onClick: () => console.log(linksDisplay),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"SKILLS\"), React.createElement(\"button\", {\n    className: \"link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"CONTACT\"), React.createElement(\"button\", {\n    className: \"link coloredLink\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"RESUME\")), React.createElement(Links, {\n    accountsDisplay: accountsDisplay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))\n  /* end of skyline */\n  ;\n}\n\nconst mapStateToProps = state => ({\n  home: state.home\n});\n\nexport default connect(mapStateToProps, {\n  showLinks,\n  showPort,\n  showAccounts\n})(Skyline);","map":{"version":3,"sources":["/Users/gabrielhauschildt/Desktop/Portfolio2Oct5/my-app/src/Components/Skyline.jsx"],"names":["React","connect","showLinks","showPort","showAccounts","Skyline","props","purpleClouds","home","nextProperty","prevProperty","property","name","color","app","github","description","note1","note2","note3","setPortDisplay","portDisplay","setLinksDisplay","linksDisplay","setAccountsDisplay","accountsDisplay","console","log","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { showLinks, showPort, showAccounts } from \"../actions/homeActions.js\";\n\nfunction Skyline(props) {\n  return (\n    <div className=\"skyline\">\n      {\" \"}\n      {/* div of 100 vw and 100 vh */}\n      <div className=\"cloudsBox\">\n        <img src={purpleClouds} className=\"clouds\"></img>\n      </div>\n      {/* start of portfolio page */}\n      <div className={props.home.showPort ? \"fade-port-in\" : \"fade-port-out\"}>\n        <button\n          className=\"exit-button\"\n          onClick={() => {\n            props.showLinks();\n            props.showPort();\n            props.showAccounts();\n          }}\n        >\n          X\n        </button>\n        {/*\n          <button\n            className=\"next-button\"\n            onClick={() => {\n              setGoToSlide(goToSlide => goToSlide + 1);\n              console.log({ goToSlide });\n            }}\n          >\n            +\n          </button>\n          <button\n            className=\"prev-button\"\n            onClick={() => {\n              setGoToSlide(goToSlide => goToSlide - 1);\n              console.log({ goToSlide });\n            }}\n          >\n            -\n          </button> */}\n\n        <CarouselSpring\n          showNavigation={false}\n          nextProperty={nextProperty}\n          prevProperty={prevProperty}\n          name={property.name}\n          color={property.color}\n          appLink={property.app}\n          gitLink={property.github}\n          description={property.description}\n          note1={property.note1}\n          note2={property.note2}\n          note3={property.note3}\n        />\n      </div>\n      {/* End of Portfolio Page */}){/* Start of Links */}\n      <ul\n        className={props.home.showLinks ? \"fade-links-in\" : \"fade-links-out\"}\n        id=\"link-wrapper\"\n      >\n        <button\n          className=\"link coloredLink\"\n          onClick={() => {\n            setPortDisplay(portDisplay => !portDisplay);\n            setLinksDisplay(linksDisplay => !linksDisplay);\n            setAccountsDisplay(accountsDisplay => !accountsDisplay);\n          }}\n        >\n          PROJECTS\n        </button>\n        <button className=\"link \" onClick={() => console.log(linksDisplay)}>\n          SKILLS\n        </button>\n        <button className=\"link\">CONTACT</button>\n        <button className=\"link coloredLink\">RESUME</button>\n      </ul>\n      {/* End of Links */}\n      <Links accountsDisplay={accountsDisplay} />\n    </div> /* end of skyline */\n  );\n}\n\nconst mapStateToProps = state => ({\n  home: state.home\n});\n\nexport default connect(mapStateToProps, { showLinks, showPort, showAccounts })(\n  Skyline\n);\n"]},"metadata":{},"sourceType":"module"}